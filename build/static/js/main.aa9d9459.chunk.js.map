{"version":3,"sources":["actions/questionActions.js","actions/types.js","components/LoanDenied.js","components/Error.js","components/SliderQuestion.js","components/InputQuestion.js","components/DetailsTable.js","App.js","serviceWorker.js","reducers/questionReducer.js","reducers/index.js","store.js","index.js"],"names":["saveInput","val","target","dispatch","type","payload","connect","state","data","reduxState","props","monthlyIncome","loanTerm","maxLoanPerIncome","Math","floor","Fragment","className","onClick","Error","role","entryTexts","step","errUnfilled","questions","confirmValue","mainInput","minVal","maxVal","valName","toStep","name","min","max","value","onChange","e","htmlFor","defaultChecked","onSubmit","preventDefault","submitAnswer","answerStateNames","detailsConfirmed","loanAmount","loanDenied","map","item","index","key","confirmLoan","Boolean","window","location","hostname","match","initialState","fullName","timeEmployed","loanAmountConfirmed","loanTermConfirmed","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa9d9459.chunk.js","sourcesContent":["import { SAVE_INPUT, TOGGLE_CHECKBOX } from './types'\r\n\r\nexport const saveInput = (val, target) => dispatch => {\r\n  dispatch({ type: SAVE_INPUT, payload: val, target: target })\r\n}\r\n\r\nexport const toggleCheckbox = (val, target) => dispatch => {\r\n  dispatch({ type: TOGGLE_CHECKBOX, payload: val, target: target })\r\n}\r\n","export const TOGGLE_CHECKBOX = 'CHECKBOX_TOGGLE'\r\nexport const SAVE_INPUT = 'SAVE_INPUT'\r\n","import React, { useState } from 'react'\r\nimport { saveInput } from '../actions/questionActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction LoanDenied(props) {\r\n  const { monthlyIncome, loanTerm } = props.data\r\n\r\n  const { saveInput } = props\r\n\r\n  // Max loan/month is 10% of the salary\r\n  let maxLoanPerIncome = Math.floor((monthlyIncome / 10) * loanTerm)\r\n\r\n  // 350 / 10 * 20\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section>\r\n        <h3 className=\"my-2\">\r\n          Unfortunately, your loan application was denied\r\n        </h3>\r\n        <p>\r\n          With your current income, you are eligible for a loan of no more than{' '}\r\n          {maxLoanPerIncome} ‚Ç¨\r\n        </p>\r\n        {maxLoanPerIncome < 600 ? (\r\n          <p>This offer falls below our minimum offered loan</p>\r\n        ) : (\r\n          <p>\r\n            If you find this offer satisfactory, you can go back and edit your\r\n            loan amount.\r\n          </p>\r\n        )}\r\n      </section>\r\n      {maxLoanPerIncome > 600  && <section className=\"btnSection mt-3 py-1\">\r\n        <button\r\n          className=\"ml-5 d-block float-left\"\r\n          onClick={() => saveInput(1, 'step')}\r\n          className=\"btn defaultBtn\"\r\n          type=\"button\"\r\n        >\r\n          ü¢Ä Go Back\r\n        </button>\r\n      </section>}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.reduxState,\r\n  }\r\n}\r\n\r\nLoanDenied.propTypes = {\r\n  saveInput: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveInput })(LoanDenied)\r\n","import React from 'react'\r\n\r\nfunction Error(props) {\r\n  return (\r\n    <section className=\"bar error\">\r\n      <span role=\"img\">‚ùå</span>\r\n      {props.type === 'tickCheck' && 'Error: Please confirm'}\r\n      {props.type === 'stringCheck' &&\r\n        'Error: Please fill in the neccessary field'}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport { saveInput } from '../actions/questionActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Error from './Error'\r\n\r\nfunction SliderQuestion(props) {\r\n  // Redux\r\n  const { data, saveInput } = props\r\n  const { entryTexts, step, errUnfilled, questions } = props.data\r\n\r\n  // Passed from HOC\r\n  const { confirmValue, mainInput, minVal, maxVal, valName, toStep } = props\r\n\r\n  const submitAnswer = () => {\r\n    data[confirmValue] == !false\r\n      ? (() => {\r\n          return saveInput(false, 'errUnfilled'), saveInput(toStep, 'step')\r\n        })()\r\n      : saveInput(true, 'errUnfilled')\r\n  }\r\n\r\n  const goBack = () => {\r\n    return saveInput(false, 'errUnfilled'), saveInput(toStep - 2, 'step')\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {errUnfilled && <Error type=\"tickCheck\" />}\r\n      <h3 className=\"my-2\">{questions[step]}</h3>\r\n      <section className=\"slidecontainer mx-auto my-5\">\r\n        <input\r\n          step={valName === '‚Ç¨' ? 50 : 1}\r\n          name=\"loanSlider\"\r\n          type=\"range\"\r\n          min={minVal}\r\n          max={maxVal}\r\n          value={data[mainInput]}\r\n          className=\"slider\"\r\n          onChange={e => saveInput(e.target.value, mainInput)}\r\n        />\r\n        <span className=\"float-left\">\r\n          {minVal} {valName}\r\n        </span>\r\n        <span className=\"float-right\">\r\n          {maxVal} {valName}\r\n        </span>\r\n      </section>\r\n      <section>\r\n        <label htmlFor=\"loanSlider\">\r\n          {entryTexts[step]}\r\n          <output className=\"ml-2 current-value\">\r\n            {data[mainInput]} {valName}\r\n          </output>\r\n        </label>\r\n        <label htmlFor=\"loanTick\" className=\"d-block\">\r\n          Confirm{' '}\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"loanTick\"\r\n            defaultChecked={data[confirmValue]}\r\n            onClick={e => saveInput(!data[confirmValue], confirmValue)}\r\n          />\r\n        </label>\r\n      </section>\r\n      <section className=\"btnSection mt-3 py-1\">\r\n        <button\r\n          className=\"ml-5 d-block float-left\"\r\n          onClick={() => goBack()}\r\n          className=\"btn defaultBtn\"\r\n          type=\"button\"\r\n        >\r\n          ü¢Ä Go Back\r\n        </button>\r\n        <button\r\n          className=\"ml-5 d-block\"\r\n          onClick={e => submitAnswer(e)}\r\n          className=\"btn defaultBtn\"\r\n          type=\"button\"\r\n        >\r\n          Forward ü¢Ç\r\n        </button>\r\n      </section>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.reduxState,\r\n  }\r\n}\r\n\r\nSliderQuestion.propTypes = {\r\n  saveInput: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveInput })(SliderQuestion)\r\n","import React from 'react'\r\nimport { saveInput } from '../actions/questionActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Error from './Error'\r\n\r\nfunction InputQuestion(props) {\r\n  // Redux\r\n  const { data, saveInput } = props\r\n  const { errUnfilled, questions, step, entryTexts } = props.data\r\n\r\n  // Passed from HOC\r\n  const { mainInput, minVal, maxVal, type, toStep } = props\r\n\r\n  const submitAnswer = e => {\r\n    e.preventDefault()\r\n    data[mainInput] !== ''\r\n      ? (() => {\r\n          return saveInput(toStep, 'step'), saveInput(false, 'errUnfilled')\r\n        })()\r\n      : saveInput(true, 'errUnfilled')\r\n  }\r\n\r\n  const goBack = () => {\r\n    return saveInput(false, 'errUnfilled'), saveInput(toStep - 2, 'step')\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {errUnfilled && <Error type=\"stringCheck\" />}\r\n      <h3 className=\"my-2\">{questions[step]}</h3>\r\n      <form className=\"mt-5\" onSubmit={e => submitAnswer(e)}>\r\n        <label htmlFor={mainInput}>{entryTexts[step]}</label>\r\n        <input\r\n          type={type}\r\n          name={mainInput}\r\n          value={data[mainInput]}\r\n          onChange={e => saveInput(e.target.value, mainInput)}\r\n          className=\"form-control ml-2\"\r\n          min={minVal}\r\n          max={maxVal}\r\n        />\r\n        <section className=\"btnSection mt-3 py-1\">\r\n          {step !== 0 && (\r\n            <button\r\n              className=\"ml-5 d-block float-left\"\r\n              onClick={() => goBack()}\r\n              className=\"btn defaultBtn\"\r\n              type=\"button\"\r\n            >\r\n              ü¢Ä Go Back\r\n            </button>\r\n          )}\r\n          <input\r\n            className=\"ml-5 d-block\"\r\n            // onClick={e => submitAnswer(e)}\r\n            className=\"btn defaultBtn\"\r\n            type=\"submit\"\r\n            value={step === 0 ? 'Login' : 'Forward ü¢Ç'}\r\n          ></input>\r\n        </section>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.reduxState,\r\n  }\r\n}\r\n\r\nInputQuestion.propTypes = {\r\n  saveInput: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveInput })(InputQuestion)\r\n","import React from 'react'\r\nimport { saveInput } from '../actions/questionActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Error from './Error'\r\n\r\nfunction DetailsTable(props) {\r\n  const { data, saveInput } = props\r\n  const {\r\n    answerStateNames,\r\n    detailsConfirmed,\r\n    loanAmount,\r\n    errUnfilled,\r\n    entryTexts,\r\n    monthlyIncome,\r\n    loanTerm\r\n  } = props.data\r\n\r\n  const confirmLoan = e => {\r\n    e.preventDefault()\r\n    detailsConfirmed !== false\r\n      ? (() => {\r\n          return (\r\n            saveInput('errUnfilled', false),\r\n            loanDenied() ? saveInput(-1, 'step') : saveInput(6, 'step')\r\n          )\r\n        })()\r\n      : saveInput(true, 'errUnfilled')\r\n  }\r\n\r\n  const goBack = () => {\r\n    return saveInput(false, 'errUnfilled'), saveInput(4, 'step')\r\n  }\r\n\r\n  const loanDenied = () => {\r\n    return loanAmount > Math.floor((monthlyIncome / 10) * loanTerm) ? true : false\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {errUnfilled && <Error type='tickCheck' />}\r\n      <h4 className=\"my-2\">Please check your details:</h4>\r\n      <section className=\"text-center\">\r\n        <table className=\"mx-auto\">\r\n          <tbody>\r\n            {entryTexts.map((item, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{item}</td>\r\n                  <td>{data[answerStateNames[index]]}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <label htmlFor=\"loanTick\" className=\"d-block\">\r\n          Confirm{' '}\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"loanTick\"\r\n            defaultChecked={detailsConfirmed}\r\n            onClick={() => saveInput(!detailsConfirmed, 'detailsConfirmed')}\r\n          />\r\n        </label>\r\n      </section>\r\n      <section className=\"btnSection mt-3 py-1\">\r\n        <button\r\n          className=\"ml-5 d-block float-left\"\r\n          onClick={() => goBack()}\r\n          className=\"btn defaultBtn\"\r\n          type=\"button\"\r\n        >\r\n          ü¢Ä Go Back\r\n        </button>\r\n        <button\r\n          className=\"ml-5 d-block\"\r\n          onClick={e => confirmLoan(e)}\r\n          className=\"btn defaultBtn\"\r\n          type=\"button\"\r\n        >\r\n          Forward ü¢Ç\r\n        </button>\r\n      </section>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.reduxState,\r\n  }\r\n}\r\n\r\nDetailsTable.propTypes = {\r\n  saveInput: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveInput })(DetailsTable)\r\n","import React from 'react'\r\nimport './styles/App.css'\r\n\r\nimport LoanDenied from './components/LoanDenied'\r\nimport SliderQuestion from './components/SliderQuestion'\r\nimport InputQuestion from './components/InputQuestion'\r\nimport DetailsTable from './components/DetailsTable'\r\n\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction App(props) {\r\n  const { step } = props\r\n  return (\r\n    <div className=\"App py-1\">\r\n      <h1>Small loan application</h1>\r\n      <React.Fragment>\r\n        {step === 0 && <InputQuestion  mainInput='fullName' type='text' toStep={1} />}\r\n        {step === 1 && <SliderQuestion confirmValue='loanAmountConfirmed' mainInput='loanAmount' minVal='600' maxVal='20000' valName='‚Ç¨' toStep={2} />}\r\n        {step === 2 && <SliderQuestion confirmValue='loanTermConfirmed' mainInput='loanTerm' minVal='6' maxVal='60' valName='months' toStep={3} />}\r\n        {step === 3 && <InputQuestion mainInput='monthlyIncome' minVal='350' type='number' toStep={4} />}\r\n        {step === 4 && <InputQuestion  mainInput='timeEmployed' minVal='1' maxVal='70' type='number' toStep={5} />}\r\n        {step === 5 && <DetailsTable confirmValue='loanAmountConfirmed' />}\r\n        {step === 6 && (\r\n          <h4 className=\"my-2\">Thank you, your application was sent!</h4>\r\n        )}\r\n        {step === -1 && <LoanDenied />}\r\n      </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    step: state.reduxState.step,\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  step: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SAVE_INPUT, TOGGLE_CHECKBOX } from '../actions/types'\r\n\r\nconst initialState = {\r\n  // Answer state presets\r\n  fullName: '',\r\n  loanAmount: 2000,\r\n  loanTerm: 9,\r\n  monthlyIncome: '',\r\n  timeEmployed: '',\r\n  maxLoanPerIncome: '',\r\n\r\n  // etc.:\r\n  step: 0,\r\n  errUnfilled: false,\r\n  loanAmountConfirmed: false,\r\n  loanTermConfirmed: false,\r\n  detailsConfirmed: false,\r\n  answerStateNames: [\r\n    'fullName',\r\n    'loanAmount',\r\n    'loanTerm',\r\n    'monthlyIncome',\r\n    'timeEmployed',\r\n  ],\r\n\r\n  entryTexts: [\r\n    'Full name: ',\r\n    'Your loan amount is:',\r\n    'Your loan term is:',\r\n    'Monthly salary, EUR:',\r\n    'Time employed, years:',\r\n  ],\r\n  questions: [\r\n    'To proceed with a small loan application, please enter your full name',\r\n    'What is your loan amount?',\r\n    'What is your loan term?',\r\n    'What is your monthly salary after taxes?',\r\n    'How many years have you been employed by your current company?',\r\n    'Please check your details:',\r\n  ],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SAVE_INPUT:\r\n    case TOGGLE_CHECKBOX:\r\n      return {\r\n        ...state,\r\n        [action.target]: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport questionReducer from './questionReducer'\r\n\r\nexport default combineReducers({\r\n  reduxState: questionReducer,\r\n})\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  ),\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />{' '}\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}